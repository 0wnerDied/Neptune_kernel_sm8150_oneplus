# SPDX-License-Identifier: GPL-2.0
config ZRAM
	tristate "Compressed RAM block device support"
	depends on BLOCK && SYSFS && ZSMALLOC && CRYPTO
	default n
	help
	  Creates virtual block devices called /dev/zramX (X = 0, 1, ...).
	  Pages written to these disks are compressed and stored in memory
	  itself. These disks allow very fast I/O and compression provides
	  good amounts of memory savings.

	  It has several use cases, for example: /tmp storage, use as swap
	  disks and maybe many more.

	  See Documentation/blockdev/zram.txt for more information.

config ZRAM_DEDUP
	bool "Deduplication support for ZRAM data"
	depends on ZRAM
	default n
	help
	  Deduplicate ZRAM data to reduce amount of memory consumption.
	  Advantage largely depends on the workload. In some cases, this
          option reduces memory usage to the half. However, if there is no
	  duplicated data, the amount of memory consumption would be
	  increased due to additional metadata usage. And, there is
	  computation time trade-off. Please check the benefit before
	  enabling this option. Experiment shows the positive effect when
	  the zram is used as blockdev and is used to store build output.

config ZRAM_WRITEBACK
       bool "Write back incompressible or idle page to backing device"
       depends on ZRAM
       default n
       help
	 With incompressible page, there is no memory saving to keep it
	 in memory. Instead, write it out to backing device.
	 For this feature, admin should set up backing device via
	 /sys/block/zramX/backing_dev.

	 With /sys/block/zramX/{idle,writeback}, application could ask
	 idle page's writeback to the backing device to save in memory.

	 See Documentation/blockdev/zram.txt for more information.

config ZRAM_MEMORY_TRACKING
	bool "Track zRam block status"
	depends on ZRAM && DEBUG_FS
	help
	  With this feature, admin can track the state of allocated blocks
	  of zRAM. Admin could see the information via
	  /sys/kernel/debug/zram/zramX/block_state.

	  See Documentation/blockdev/zram.txt for more information.

if ZRAM

choice
	prompt "Default zRAM backend"
	default DEFAULT_ZRAM_ZSMALLOC
	help
	  Select the memory allocator that will be used by default to store
	  compressed pages for all zRAM devices.

	config DEFAULT_ZRAM_ZBUD
		bool "zbud" if ZBUD=y

	config DEFAULT_ZRAM_Z3FOLD
		bool "z3fold" if Z3FOLD=y

	config DEFAULT_ZRAM_ZSMALLOC
		bool "zsmalloc" if ZSMALLOC=y
endchoice

config ZRAM_DEFAULT_BACKEND
	string
	default "zbud" if DEFAULT_ZRAM_ZBUD
	default "z3fold" if DEFAULT_ZRAM_Z3FOLD
	default "zsmalloc"

endif

config ZRAM_DEFAULT_COMP_ALGORITHM
	string "Default ZRAM compression algorithm"
	default "zstd"

config ZRAM_SIZE_OVERRIDE
	int "zram size to set from kernel"
	range 1 4096
	default 2048
